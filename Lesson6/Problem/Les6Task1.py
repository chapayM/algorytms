# 5. В массиве найти максимальный отрицательный элемент. Вывести на экран его значение и позицию в массиве.
# Примечание к задаче: пожалуйста не путайте «минимальный» и «максимальный отрицательный». Это два абсолютно
# разных значения.

# 1. Подсчитать, сколько было выделено памяти под переменные в ранее
# разработанных программах в рамках первых трех уроков.
# Проанализировать результат и определить программы с наиболее
# эффективным использованием памяти.
# Примечание: По аналогии с эмпирической оценкой алгоритмов идеальным решением будет:
# a. выбрать хорошую задачу, которую имеет смысл оценивать по памяти;
# b. написать 3 варианта кода (один у вас уже есть);
# проанализировать 3 варианта и выбрать оптимальный;
#
# c. результаты анализа (количество занятой памяти в вашей среде разработки)
# вставить в виде комментариев в файл с кодом. Не забудьте указать версию и разрядность вашей ОС и интерпретатора Python;
# d. написать общий вывод: какой из трёх вариантов лучше и почему.
# Надеемся, что вы не испортили программы, добавив в них множество sys.getsizeof
# после каждой переменной, а проявили творчество, фантазию и создали универсальный код для замера памяти.
import sys
from random import randint
import max_negative_num1
import max_negative_num2
import max_negative_num3
from def_var_names import var_names


print(sys.version, sys.platform)
#3.9.10 (tags/v3.9.10:f2f3f53, Jan 17 2022, 15:14:21) [MSC v.1929 64 bit (AMD64)] win32
list1 = [randint(-10, 10) for _ in range(10)]
print(list1)

# Цикл фарcинга текста кода для последующего формирования множества имен переменных кода
content = {}
for i in range(1, 4):
    my_f = open(f"max_negative_num{i}.py", "r", encoding="utf-8")
    content[i] = my_f.read()
    my_f.close()

print(content)

# Формируем массив с именами переменных по типам реализации
var_name = [var_names(content[i]) for i in content]

# По задумке далее в функцию передаем сам обрабатываемый массив и список
# имен переменных для его обработки на заргрузку памяти, но как это сделать
# так и не разобрался к сожалению. Если у вас есть мысли по этому поводу,
# буду раз услышать.
max_negative_num1.max_negative_number1(list1, var_name[0])
max_negative_num2.max_negative_number2(list1, var_name[1])
max_negative_num3.max_negative_number3(list1, var_name[2])

